Sept 9 2008:	Setup CVS & CVSD on the server
		Setup the external IP 192.195.227.69 for the server

Sept 16 2008:	Setup DNS on the server
		Setup nq-2.2 as the starting point in the CVS repository

Sept 18 2008:	CVS Repository approved.
		Starting work on commenting and finding out why the test cases fail.

Sept 23 2008:	The date was wrong on the supplied control test cases.  Was July 2002, needed to be January 2003.

Sept 25 2008:	Added the $Id$ and $Log$ to some files.  A style format needs to be set.
		Cleaned up the initial compiler errors.  All were caused by the lack of an #include, mostly <stdlib.h>
		Compliled with Ansi '99 Standard & discovered a ton of work.

Sept 26 2008:	Ansi '99 now has only 3 warnings.  $Id$ and $Log$ are on most source files.

Sept 30 2008:	I fixed the -Wall warnings.  It was mostly unused variables, uninitilized variables and mismatching data types in printf

Oct   2 2008:	I installed GAP & considered some style changes for the project.

Oct  28 2008:	There are still a few problems with the C99 code standard.  Gethostname is not supported, but is checked in the configure script.  The 			program also uses multithreading which is not specified in C99.

Oct  30 2008:	If there is an ansi compliant way to call sbrk(0) I can't find it...  I'm not sure why it is even nescessary to report the size of memory 			used to compute.

Nov   5 2008:	The call to sbrk(0) is the only problem left to fix for ansi compatibility.  I am converting all the code to a specific style now.  

Nov  12 2008:	I am putting the opening braces for function definitions on their own lines because i think it looks the best.  I am beginning to think 		putting the opening braces for if/for/while statements on their own line as well because it looks better when the ( ) portion of the 			statement has to be broken into multiple lines.  Also when you are at the } end of the block of code, it is easier to see the beginning 		brace.

		I am doing a 3 space indent because that is what I've always done.
		I am not putting a space between a function and the opening (.  I am, however, putting a space after if/for/while because that is how I've
		always done it, and also because it differentiates them from functions.

		I am limiting the width of the code to 74 characters on the reccomendation of Dr. Morse.

		Large comment blocks go as such, and are generally found before definitions and describe what the definition pertains to.
		/**************************(fill to 74 characters)
		** Comment
		** comment
		*/

                Smaller comment blocks go as such, and are for comments within definitions
		/*
		** comment
		** comment
		*/

		Smaller still, these comments are for short notes within code
		/* comment */

		In situations when a for does not require { } but the statment nested does I am added { } to the original for to err on the side of clarity
		For example

		for ( ; ; ) {
		   if ( etc ) {
		      etc;
		      etc;
		   }
		}

		Instead of

		for ( ; ; )
		   if ( etc ) {
		      etc;
		      etc;
		   }

Jan  26 2009:	I modified the options routine to use getopt.  I tested the output for a file using every argument against the output of the original
		it matched perfectly except for the time spent processing lines.  I originally did this to see if it would fix an error that valgrind
		is reporting, but it did not fix the error.  I would like to keep it because it offers more robust option processing & also fixed a
		bug that existed in the old code that was calculating the wait improperly for the -t option. For example, 1d was processed as 24 seconds
		rather than 24 hours.  Getopt is not ansi C however, so I had to remove the -std=c99 option in order to use it.